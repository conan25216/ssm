<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.walker.basewf.auth.dao.UserDao">

    <!-- ============================= INSERT ============================= -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO user( id,acct_no,password,name,gender,state,create_user,
                         create_time,update_time )
        VALUES ( #{id},#{acctNo},#{password},#{name},#{gender},#{state},#{createUser},
                 #{createTime},#{updateTime})
    </insert>


    <insert id="saveBatch">
        INSERT INTO user( id,acct_no,password,name,gender,state,create_user,
                          create_time,update_time )
        VALUES 
        <foreach collection="list" item="item" index="index" separator=",">
            ( #{item.id},#{item.acctNo},#{item.password},#{item.name},#{item.gender},#{item.state},#{item.createUser},
              #{item.createTime},#{item.updateTime} )
        </foreach>
    </insert>


    <!--
    <insert id="saveBatch">
        INSERT INTO user( id,acct_no,password,name,gender,state,create_user,
                          create_time,update_time )
        <foreach collection="list" item="item" index="index" separator="UNION ALL">
            SELECT #{item.id},#{item.acctNo},#{item.password},#{item.name},#{item.gender},#{item.state},#{item.createUser},
              #{item.createTime},#{item.updateTime} 
              FROM DUAL 
        </foreach>
    </insert>

    -->

    <!-- ============================= UPDATE ============================= -->
    <update id="update">
        UPDATE user
        <set>
            acct_no=#{acctNo},
            password=#{password},
            name=#{name},
            gender=#{gender},
            state=#{state},
            create_user=#{createUser},
            create_time=#{createTime},
            update_time=#{updateTime},
        </set>
        WHERE id=#{id} 
    </update>

    <update id="updateIgnoreNull">
        UPDATE user
        <set>
            <if test="acctNo!= null">acct_no=#{acctNo},</if>
            <if test="password!= null">password=#{password},</if>
            <if test="name!= null">name=#{name},</if>
            <if test="gender!= null">gender=#{gender},</if>
            <if test="state!= null">state=#{state},</if>
            <if test="createUser!= null">create_user=#{createUser},</if>
            <if test="createTime!= null">create_time=#{createTime},</if>
            <if test="updateTime!= null">update_time=#{updateTime},</if>
        </set>
        WHERE id=#{id} 
    </update>

    <update id="updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index"  separator=";">
            UPDATE user
            <set>
                acct_no=#{item.acctNo},
                password=#{item.password},
                name=#{item.name},
                gender=#{item.gender},
                state=#{item.state},
                create_user=#{item.createUser},
                create_time=#{item.createTime},
                update_time=#{item.updateTime},
            </set>
            WHERE id=#{item.id} 
        </foreach>
    </update>


    <!-- ============================= DELETE ============================= -->
    <delete id="delete">
        DELETE FROM user
        WHERE id=#{id} 
    </delete>

    <delete id="deleteBatch">
        DELETE FROM user
        WHERE
        <foreach collection="list" item="item" index="index" open="(" separator="OR" close=")">
            id=#{item.id} 
        </foreach>
    </delete>

    <delete id="deleteByPK">
        DELETE FROM user
        WHERE id=#{id} 
    </delete>

    <delete id="deleteAll">
        DELETE FROM user
    </delete>


    <!-- ============================= SELECT ============================= -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(1) FROM user
    </select>

    <select id="findByPK" resultType="User">
        SELECT * FROM user
        WHERE id=#{id} 
    </select>

    <select id="findByUK" resultType="User">
        SELECT * FROM user
        WHERE acct_no=#{acctNo}
    </select>


    <!-- 查找各用户绑定的"菜单及功能项" -->
    <select id="findUserMenuFuncs" resultType="java.util.HashMap">
        select distinct u.acct_no, rm.menu_id, rm.func_ids
          from user u, user_role ur, role_menu rm
         where u.id = ur.user_id and ur.role_id = rm.role_id
         order by u.acct_no, rm.menu_id
    </select>

    <!-- 查找各用户绑定的"产品列表" -->
    <select id="findUserProds" resultType="java.util.HashMap">
        select distinct u.acct_no, rp.prod_code, rp.prod_name
          from user u, user_role ur, role_prod rp
         where u.id = ur.user_id and ur.role_id = rp.role_id
         order by acct_no
    </select>

    <!-- 查找可查看所有业务数据的用户  -->
    <select id="findCanViewAllUser" resultType="java.util.HashMap">
        select distinct u.acct_no
          from user u, user_role ur, role r
         where u.id = ur.user_id and ur.role_id = r.id
           and r.can_view_all = 1
         order by u.acct_no
    </select>


    <select id="find" resultType="User">
        SELECT id,acct_no,password,name,gender,state,create_user,create_time
               ,update_time
         FROM user
        <where>
            <if test="id!= null">
               AND id = #{id}
            </if>
            <if test="acctNo!= null">
               AND acct_no like #{acctNo}
            </if>
            <if test="password!= null">
               AND password = #{password}
            </if>
            <if test="name!= null">
               AND name like #{name}
            </if>
            <if test="gender!= null">
               AND gender = #{gender}
            </if>
            <if test="state!= null">
               AND state = #{state}
            </if>
            <if test="createUser!= null">
               AND create_user = #{createUser}
            </if>
            <if test="createTime!= null">
               AND create_time = #{createTime}
            </if>
            <if test="updateTime!= null">
               AND update_time = #{updateTime}
            </if>
        </where>
    </select>

</mapper>
